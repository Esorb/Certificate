// <auto-generated />
using System;
using Esorb.Certificate.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Esorb.Certificate.Model.Migrations
{
    [DbContext(typeof(CertificateContext))]
    partial class CertificateContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.0");

            modelBuilder.Entity("Esorb.Certificate.Model.CertificateData", b =>
                {
                    b.Property<long>("CertificateDataId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("DateOfCertificateDistribution")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("DateOfRestartLessons")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("DateOfSchoolConference")
                        .HasColumnType("TEXT");

                    b.Property<short>("HalfYear")
                        .HasColumnType("INTEGER");

                    b.Property<short>("SchoolYear")
                        .HasColumnType("INTEGER");

                    b.Property<TimeOnly>("TimeOfRestartLessons")
                        .HasColumnType("TEXT");

                    b.HasKey("CertificateDataId");

                    b.ToTable("CertificateData");
                });

            modelBuilder.Entity("Esorb.School_Certificate.Model.Pupil", b =>
                {
                    b.Property<long>("PupilId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("SchoolClassId")
                        .HasColumnType("INTEGER");

                    b.Property<short>("YearsAtSchool")
                        .HasColumnType("INTEGER");

                    b.HasKey("PupilId");

                    b.HasIndex("SchoolClassId");

                    b.ToTable("Pupils");
                });

            modelBuilder.Entity("Esorb.School_Certificate.Model.SchoolClass", b =>
                {
                    b.Property<long>("SchoolClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClassName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<short>("HalfYear")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Yearlevel")
                        .HasColumnType("INTEGER");

                    b.HasKey("SchoolClassId");

                    b.ToTable("SchoolClasses");
                });

            modelBuilder.Entity("Esorb.School_Certificate.Model.Pupil", b =>
                {
                    b.HasOne("Esorb.School_Certificate.Model.SchoolClass", "SchoolClass")
                        .WithMany()
                        .HasForeignKey("SchoolClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SchoolClass");
                });
#pragma warning restore 612, 618
        }
    }
}
